// Code generated by goa v3.0.2, DO NOT EDIT.
//
// SSAServer client
//
// Command:
// $ goa gen SSAServer/design

package ssaserver

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "SSAServer" service client.
type Client struct {
	RegisterEndpoint       goa.Endpoint
	LoginEndpoint          goa.Endpoint
	ChangeGroupEndpoint    goa.Endpoint
	DeleteUserEndpoint     goa.Endpoint
	SaveDataEndpoint       goa.Endpoint
	ReturnDataListEndpoint goa.Endpoint
	PickUpDataEndpoint     goa.Endpoint
}

// NewClient initializes a "SSAServer" service client given the endpoints.
func NewClient(register, login, changeGroup, deleteUser, saveData, returnDataList, pickUpData goa.Endpoint) *Client {
	return &Client{
		RegisterEndpoint:       register,
		LoginEndpoint:          login,
		ChangeGroupEndpoint:    changeGroup,
		DeleteUserEndpoint:     deleteUser,
		SaveDataEndpoint:       saveData,
		ReturnDataListEndpoint: returnDataList,
		PickUpDataEndpoint:     pickUpData,
	}
}

// Register calls the "Register" endpoint of the "SSAServer" service.
func (c *Client) Register(ctx context.Context, p *RegisterPayload) (res *SsaResult, err error) {
	var ires interface{}
	ires, err = c.RegisterEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SsaResult), nil
}

// Login calls the "Login" endpoint of the "SSAServer" service.
func (c *Client) Login(ctx context.Context, p *LoginPayload) (res bool, err error) {
	var ires interface{}
	ires, err = c.LoginEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(bool), nil
}

// ChangeGroup calls the "Change_group" endpoint of the "SSAServer" service.
func (c *Client) ChangeGroup(ctx context.Context, p *ChangeGroupPayload) (res bool, err error) {
	var ires interface{}
	ires, err = c.ChangeGroupEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(bool), nil
}

// DeleteUser calls the "Delete_user" endpoint of the "SSAServer" service.
func (c *Client) DeleteUser(ctx context.Context, p *DeleteUserPayload) (res bool, err error) {
	var ires interface{}
	ires, err = c.DeleteUserEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(bool), nil
}

// SaveData calls the "Save_data" endpoint of the "SSAServer" service.
func (c *Client) SaveData(ctx context.Context, p *SaveDataPayload) (err error) {
	_, err = c.SaveDataEndpoint(ctx, p)
	return
}

// ReturnDataList calls the "Return_data_list" endpoint of the "SSAServer"
// service.
func (c *Client) ReturnDataList(ctx context.Context, p *ReturnDataListPayload) (res SsaResultCollection, err error) {
	var ires interface{}
	ires, err = c.ReturnDataListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(SsaResultCollection), nil
}

// PickUpData calls the "Pick_up_data" endpoint of the "SSAServer" service.
func (c *Client) PickUpData(ctx context.Context, p *PickUpDataPayload) (res *SsaResult, err error) {
	var ires interface{}
	ires, err = c.PickUpDataEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*SsaResult), nil
}
